#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

int matrix_chain_order (int *p, int n) {
    int i, j, k, l;
    int **m = (int **)malloc(n * sizeof(int *));
    for (i = 0; i < n; i++)
        m[i] = (int *)malloc(n * sizeof(int));
    for (i = 1; i < n; i++)
        m[i][i] = 0;
    for (l = 2; l < n; l++)
        for (i = 1; i < n-l+1; i++) {
            j = i+l-1;
            m[i][j] = INT_MAX;
            for (k = i; k <= j-1; k++) {
                int q = m[i][k] + m[k+1][j] + p[i-1]*p[k]*p[j];
                if (q < m[i][j])
                    m[i][j] = q;
            }
        }
    return m[1][n-1];    
}

int main() {
    int n, i;
    printf("Enter the number of matrices : ");
    scanf("%d",&n);
    int *p = (int*)malloc((n+1)* sizeof(int));
    printf("Enter the dimensions of the matrices : \n");
    for (i = 0; i <= n; i++)
        scanf("%d", &p[i]);
    int min_scalar_multiplications = matrix_chain_order(p, n+1);
    printf("Minimum number of scalar multiplications needed : %d\n", min_scalar_multiplications);
}




*******OUTPUT*******
Enter the number of matrices : 4
Enter the dimensions of the matrices : 
1 2 3 4 3
Minimum number of scalar multiplications needed : 30
