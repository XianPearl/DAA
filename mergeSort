#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void merge (int *a, int l, int m, int r) {
    int p = m-l+1, q = r-m, i, j, k = l, *s, *t;
    s = (int *)calloc(p, sizeof(int));
    t = (int *)calloc(q, sizeof(int));
    for (i = 0; i < p; i++)
        *(s+i) = *(a+l+i);
    for (i = 0; i < q; i++)
        *(t+i) = *(a+m+1+i);
        
    i = 0;
    j = 0;
    
    while (i < p && j < q) {
        if (*(s+i) <= *(t+j)) {
            *(a+k) = *(s+i);
            i++;
        } 
        else {
            *(a+k) = *(t+j);
            j++;
        }
        k++;
    }
    while (i < p) {
        *(a+k) = *(s+i);
        i++;
        k++;
    }
    while (j < q) {
        *(a+k) = *(t+j);
        j++;
        k++;
    }
}

void mergeSort (int *a, int l, int r) {
    if (l < r) {
        int m = (l+r)/2;
        mergeSort (a,l,m);
        mergeSort (a,m+1,r);
        merge (a,l,m,r);
    }
}

void main () {
    clock_t start, end;
    int *p, n, i;
    printf("Enter the array size : ");
    scanf ("%d", &n);
    p = (int *)calloc(n, sizeof(int));
    for (i = 0; i < n; i++) 
        *(p+i) = rand() % n;
    start = clock();
    mergeSort (p, 0, n-1);
    end = clock();
    printf("The array elements of merge sort : \n");
    for (i = 0; i < n; i++) 
        printf("%d  ", *(p+i));
    double duration = ((double)end - start)/CLOCKS_PER_SEC;
    printf("\nTime taken to execute in seconds : %f\n", duration);
}





********OUTPUT*********
Enter the array size : 10
The array elements of merge sort : 
1  2  3  3  5  5  6  6  7  9  
Time taken to execute in seconds : 0.000006
